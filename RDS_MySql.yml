AWSTemplateFormatVersion: 2010-09-09

Description: Creating RDS MySql, Security Group and Subnet 1.2
# Fixed DBSubnetGroup Description
# Added DBInstanceIdentifier
# Added Tag Key=Schedule, Value='' to DBInstance for Instance Scheduler
Parameters:
  VPC:
    Default: default
    Description: VPC to run database
    Type: AWS::EC2::VPC::Id
  Subnet1:
    Default: default
    Description: EC2 Subnet - Primary
    Type: AWS::EC2::Subnet::Id
  Subnet2:
    Default: default
    Description: EC2 Subnet - Secondary
    Type: AWS::EC2::Subnet::Id
  EC2SecurityGroupId:
    Default: default
    Description: EC2 Security Group to allow access to DB
    Type: AWS::EC2::SecurityGroup::Id
  RDSDBName:
    Default: 'name'
    Description: Name of database
    Type: String
  DBAllocatedStorage:
    Default: '20'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '20'
    MaxValue: '1024'
    ConstraintDescription: must be between 20 and 1024Gb.
  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t2.small
    AllowedValues: [db.t1.micro, db.m1.small, db.m1.medium, db.m1.large, db.m1.xlarge,
      db.m2.xlarge, db.m2.2xlarge, db.m2.4xlarge, db.m3.medium, db.m3.large, db.m3.xlarge,
      db.m3.2xlarge, db.m4.large, db.m4.xlarge, db.m4.2xlarge, db.m4.4xlarge, db.m4.10xlarge,
      db.r3.large, db.r3.xlarge, db.r3.2xlarge, db.r3.4xlarge, db.r3.8xlarge, db.m2.xlarge,
      db.m2.2xlarge, db.m2.4xlarge, db.cr1.8xlarge, db.t2.micro, db.t2.small, db.t2.medium,
      db.t2.large]
    ConstraintDescription: must select a valid database instance type.
  DBUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
  DBSubnetGroupName:
    Description: The database subnet group name
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  MultiAZ:
    Description: Multi-AZ master database
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false.

Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: default subnet group
      DBSubnetGroupName: !Ref 'DBSubnetGroupName'
      SubnetIds: 
        - !Sub "${Subnet1}" 
        - !Sub "${Subnet2}"
      Tags:
        - 
          Key: Name 
          Value: RDS Default Subnet Group
  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        SourceSecurityGroupId: !Ref 'EC2SecurityGroupId'
      VpcId: !Ref 'VPC'
      Tags:
      - Key: Name
        Value: MySql
  # DBSecurityGroup is not supported in GovCloud
  # DBSecurityGroup:
  #   Type: AWS::RDS::DBSecurityGroup
  #   Properties:
  #     DBSecurityGroupIngress:
  #       EC2SecurityGroupId: !Ref 'EC2SecurityGroupId'
  #     GroupDescription: database access
  MasterDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref 'RDSDBName'
      AllocatedStorage: !Ref 'DBAllocatedStorage'
      DBInstanceClass: !Ref 'DBInstanceClass'
      DBInstanceIdentifier: !Ref 'RDSDBName'
      DBSubnetGroupName: !Ref 'DBSubnetGroupName'
      Engine: MySQL
      MasterUsername: !Ref 'DBUser'
      MasterUserPassword: !Ref 'DBPassword'
      MultiAZ: !Ref 'MultiAZ'
      VPCSecurityGroups: [!Sub "${DBEC2SecurityGroup}"]
      Tags:
      - Key: Name
        Value: !Ref "RDSDBName"
      - Key: Schedule
        Value: ''
      
      # DBSecurityGroups: !Ref 'DBSecurityGroup'
    DeletionPolicy: Snapshot
  # ReplicaDB:
  #   Type: AWS::RDS::DBInstance
  #   Properties:
  #     SourceDBInstanceIdentifier: !Ref 'MasterDB'
  #     DBInstanceClass: !Ref 'DBInstanceClass'
  #     Tags:
  #     - Key: Name
  #       Value: Read Replica Database

# Outputs:
#   EC2Platform:
#     Description: Platform in which this stack is deployed
#     Value: !If [Is-EC2-VPC, EC2-VPC, EC2-Classic]
#   MasterJDBCConnectionString:
#     Description: JDBC connection string for the master database
#     Value: !Join ['', ['jdbc:mysql://', !GetAtt [MasterDB, Endpoint.Address], ':',
#         !GetAtt [MasterDB, Endpoint.Port], /, !Ref 'DBName']]
  # ReplicaJDBCConnectionString:
  #   Description: JDBC connection string for the replica database
  #   Value: !Join ['', ['jdbc:mysql://', !GetAtt [ReplicaDB, Endpoint.Address], ':',
  #       !GetAtt [ReplicaDB, Endpoint.Port], /, !Ref 'DBName']]
